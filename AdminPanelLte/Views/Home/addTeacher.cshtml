@model MyAdmin.Models.TeacherModelView

@{
   
    Layout = "~/Views/Shared/_Layout.cshtml";
}
<head>
    <script src="~/script/sweetalert.min.js" ></script>
</head>
<div class="col col-md-10">


    <div class="bg-indigo color-palette"><h3>&nbsp;Add Teachers Details</h3></div>

    <div style="display:none" id="loader">
        <center>
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp; <img src="~/script/loader.gif" height="100" width="100" />
            &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<label class="bg-indigo color-palette">Please Wail...</label>
        </center>
    </div>
</div>

@*@using (Html.BeginForm("addTeacher", "Home", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

<div class="form-horizontal">

    <hr />
    @Html.ValidationSummary(true, "", new { @class = "text-danger" })
    <div class="form-group">
        @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.FirstName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.LastName, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Phone, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">
        @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
        <div class="col-md-10">
            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })
            @Html.ValidationMessageFor(model => model.Department, "", new { @class = "text-danger" })
        </div>
    </div>

    <div class="form-group">

        <div class="col-md-10">
            @Html.HiddenFor(model => model.role, new { htmlAttributes = new { @class = "form-control" } })

        </div>
    </div>

    <div class="form-group">
        <div class="col-md-offset-2 col-md-10">

            <input type="submit" value="Create" class="btn btn-success" onclick="myfunction()" />
        </div>
        @if (ViewBag.IsSuccess != null)
        {

            <script>
                function myfunction() {

                    swal("Successfully", "Teacher Add", "success");


                }

            </script>
        }
        </div>
  

    
    
</div>
}*@

@using (Ajax.BeginForm("addTeacher1", new AjaxOptions() { OnSuccess = "fnSucess", OnFailure = "fnFail", HttpMethod = "POST", LoadingElementId= "loader", LoadingElementDuration=2000 }))
{
<div class="form-horizontal">   
  
    <div class="form-group">
      
        <div class="col-md-10" >
            @Html.LabelFor(model => model.FirstName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.FirstName, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.LastName, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.LastName, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.Phone, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Phone, new { htmlAttributes = new { @class = "form-control" } })

            @Html.LabelFor(model => model.Department, htmlAttributes: new { @class = "control-label col-md-2" })
            @Html.EditorFor(model => model.Department, new { htmlAttributes = new { @class = "form-control" } })

        </div>
      

    </div>

    <div class="col-md-offset-2 col-md-10">

        <br /> <input type="submit" value="Create" class="btn btn-success" />
       
    </div>
    

    </div>
 }

<script>
    function fnSucess(data)
    {

        swal("Successfully", "Data Saved", "success");
         



    }

    function fnFail(err)
    {

        swal("Faild", "Data Not Saved", "error");

    }
</script>
    <div class="col-md-offset-2 col-md-10">
        @Html.ActionLink("Back to List", "Index")
    </div>
