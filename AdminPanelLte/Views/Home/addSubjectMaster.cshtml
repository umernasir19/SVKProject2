@model MyAdmin.Models.Subject_MasterView

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<!DOCTYPE html>

<html>
<head>
    <meta name="viewport" content="width=device-width" />
    <script src="~/script/sweetalert.min.js"></script>
</head>
<body>
    <script src="~/Scripts/jquery-3.4.1.min.js"></script>
    <script src="~/Scripts/jquery.validate.min.js"></script>
    <script src="~/Scripts/jquery.validate.unobtrusive.min.js"></script>


    @using (Ajax.BeginForm("addSubjectMaster", new AjaxOptions() { OnSuccess = "fnSucess", OnFailure = "fnFail", HttpMethod = "POST" }))
    {

        <div class="form-horizontal">
            
            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.HiddenFor(model=>model.Subject_ID)
                @Html.LabelFor(model => model.SubjectName, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.SubjectName, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.SubjectName, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.isActive, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.isActive)
                        @Html.ValidationMessageFor(model => model.isActive, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.IsComm, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    <div class="checkbox">
                        @Html.EditorFor(model => model.IsComm)
                        @Html.ValidationMessageFor(model => model.IsComm, "", new { @class = "text-danger" })
                    </div>
                </div>
            </div>

            @*<div class="form-group">
                @Html.LabelFor(model => model.LastUpdateUTC, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastUpdateUTC, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastUpdateUTC, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.LastUpdateBy, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.LastUpdateBy, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.LastUpdateBy, "", new { @class = "text-danger" })
                </div>
            </div>*@

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="save" class="btn btn-default" />
                </div>
            </div>
        </div>
    }
    <script>
        function fnSucess(data) {

            swal({
                title: "Successfully!",
                text: "Data Saved!",
                type: "success"
            }).then(function () {

                window.location = this.location.href;
            });




        }

        function fnFail(err) {

            swal("Faild", "Data Not Saved", "error");

        }
    </script>
    <div>
        &nbsp;&nbsp;  @Html.ActionLink("View List", "ViewSubject")
    </div>
</body>
</html>
